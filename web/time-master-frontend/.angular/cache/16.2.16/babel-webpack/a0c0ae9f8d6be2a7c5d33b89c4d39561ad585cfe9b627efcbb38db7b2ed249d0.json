{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TeachersService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/teachers'; // Replace with your actual API endpoint\n  }\n\n  getTeachers() {\n    return this.http.get(this.apiUrl);\n  }\n  // Fetch all teachers\n  getAllTeachers() {\n    return this.http.get(this.apiUrl);\n  }\n  // Get a single teacher by ID\n  getTeacherById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Add a new teacher\n  addTeacher(teacher) {\n    return this.http.post(this.apiUrl, teacher);\n  }\n  // Update an existing teacher\n  updateTeacher(id, teacher) {\n    return this.http.put(`${this.apiUrl}/${id}`, teacher);\n  }\n  // Delete a teacher by ID\n  deleteTeacher(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function TeachersService_Factory(t) {\n      return new (t || TeachersService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TeachersService,\n      factory: TeachersService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TeachersService","constructor","http","apiUrl","getTeachers","get","getAllTeachers","getTeacherById","id","addTeacher","teacher","post","updateTeacher","put","deleteTeacher","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DELL\\Desktop\\TimeMaster\\web\\time-master-frontend\\src\\app\\services\\teachers.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Teacher } from '../models/teacher.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeachersService {\n\n  private apiUrl = 'http://localhost:3000/teachers'; // Replace with your actual API endpoint\n\n  constructor(private http: HttpClient) { }\n  getTeachers(): Observable<Teacher[]> {\n    return this.http.get<Teacher[]>(this.apiUrl);\n  }\n\n  // Fetch all teachers\n  getAllTeachers(): Observable<Teacher[]> {\n    return this.http.get<Teacher[]>(this.apiUrl);\n  }\n\n  // Get a single teacher by ID\n  getTeacherById(id: number): Observable<Teacher> {\n    return this.http.get<Teacher>(`${this.apiUrl}/${id}`);\n  }\n\n  // Add a new teacher\n  addTeacher(teacher: Teacher): Observable<Teacher> {\n    return this.http.post<Teacher>(this.apiUrl, teacher);\n  }\n\n  // Update an existing teacher\n  updateTeacher(id: number, teacher: Teacher): Observable<Teacher> {\n    return this.http.put<Teacher>(`${this.apiUrl}/${id}`, teacher);\n  }\n\n  // Delete a teacher by ID\n  deleteTeacher(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC,CAAC,CAAC;EAEX;;EACxCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEA;EACAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEA;EACAI,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;EAEA;EACAC,UAAUA,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,IAAI,CAACR,MAAM,EAAEO,OAAO,CAAC;EACtD;EAEA;EACAE,aAAaA,CAACJ,EAAU,EAAEE,OAAgB;IACxC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAU,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEA;EACAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;;;uBAhCWR,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfnB,eAAe;MAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}