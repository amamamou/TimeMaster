{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = 'http://localhost:3000/users/login'; // Correct URL for the login endpoint\n  }\n\n  login(username, password) {\n    return this.http.post(this.loginUrl, {\n      username,\n      password\n    }, {\n      observe: 'response'\n    });\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","http","loginUrl","login","username","password","post","observe","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DELL\\Desktop\\TimeMaster\\web\\time-master-frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["// src/app/services/auth.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private loginUrl = 'http://localhost:3000/users/login'; // Correct URL for the login endpoint\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(this.loginUrl, { username, password }, { observe: 'response' });\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,QAAQ,GAAG,mCAAmC,CAAC,CAAC;EAEjB;;EAEvCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;MAAEE,QAAQ;MAAEC;IAAQ,CAAE,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACvF;;;uBAPWR,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXZ,WAAW;MAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}